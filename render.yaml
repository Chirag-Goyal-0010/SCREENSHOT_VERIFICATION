services:
  # Rails Web App
  - type: web
    name: screenshot-verification-web
    env: docker
    rootDir: webapp
    plan: free
    autoDeploy: true
    dockerCommand: bundle exec puma -C config/puma.rb
    healthCheckPath: /up
    envVars:
      - key: RAILS_ENV
        value: production
      - key: RACK_ENV
        value: production
      - key: RAILS_LOG_TO_STDOUT
        value: true
      - key: RAILS_MASTER_KEY
        sync: false
      - key: DATABASE_URL
        fromDatabase:
          name: screenshot-verification-db
          property: connectionString
      - key: PHASH_BASE_URL
        value: http://screenshot-verification-phash:5001
      - key: VGG16_BASE_URL
        value: http://screenshot-verification-vgg16:5002
      # AWS S3 config (see below)
      - key: AWS_ACCESS_KEY_ID
        sync: false
      - key: AWS_SECRET_ACCESS_KEY
        sync: false
      - key: AWS_REGION
        value: ap-south-1
      - key: S3_BUCKET_NAME
        value: screenshot-verification-storage

  # Background Worker (Solid Queue or Sidekiq)
  - type: worker
    name: screenshot-verification-worker
    env: docker
    rootDir: webapp
    plan: free
    autoDeploy: true
    envVars:
      - key: RAILS_ENV
        value: production
      - key: RACK_ENV
        value: production
      - key: RAILS_LOG_TO_STDOUT
        value: true
      - key: RAILS_MASTER_KEY
        sync: false
      - key: DATABASE_URL
        fromDatabase:
          name: screenshot-verification-db
          property: connectionString
      - key: SOLID_QUEUE_IN_PUMA
        value: "false"
    dockerCommand: ./bin/rails solid_queue:start

  # Migration Worker
  - type: worker
    name: screenshot-verification-migrate
    env: docker
    rootDir: webapp
    plan: free
    autoDeploy: false
    envVars:
      - key: RAILS_ENV
        value: production
      - key: RACK_ENV
        value: production
      - key: RAILS_MASTER_KEY
        sync: false
      - key: DATABASE_URL
        fromDatabase:
          name: screenshot-verification-db
          property: connectionString
    dockerCommand: ./bin/rails db:migrate

  # Python pHash Service
  - type: pserv
    name: screenshot-verification-phash
    env: python
    rootDir: image-analysis
    buildCommand: pip install -r requirements.txt
    startCommand: python phash_service.py
    plan: free
    autoDeploy: true
    envVars: []

  # Python VGG16 Service
  - type: pserv
    name: screenshot-verification-vgg16
    env: python
    rootDir: image-analysis
    buildCommand: pip install -r requirements.txt
    startCommand: python vgg16_service.py
    plan: free
    autoDeploy: true
    envVars: []

databases:
  - name: screenshot-verification-db
    databaseName: screenshot_verification_prod
    plan: free
